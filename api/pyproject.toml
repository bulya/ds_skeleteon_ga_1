[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"
Celery = "*"
Django = "*"
django-environ = "*"
django-filter = "*"
djangorestframework = "*"
drf-spectacular = "*"
gunicorn = "*"
psycopg = { version = "*", extras = ["binary", "pool"] }
redis = "*"
sentry-sdk = "*"
django-storages = "*"
boto3 = "^1.26"

[tool.poetry.group.dev.dependencies]
Pygments = "*"
bandit = "*"
ruff = "*"
coverage = { version = "*", extras = ["toml"] }
django-debug-toolbar = "*"
django-extensions = "*"
Werkzeug = "*"
ipdb = "*"
ipython = "*"
model-bakery = "*"
pytest-django = "*"
pytest-mock = "*"
pytest = "*"
safety = "*"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "ds_skeleteon_ga_1.settings"
python_files = ["tests.py", "test_*.py", "*_test.py"]

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), Isort (`I`), Bandit (`S`) and flake8 Django (`DJ`) codes.
lint.select = ["E", "F", "I", "S", "DJ"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 120

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py313"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"conftest*" = ["F403"]
"test_*.py" = ["S"]
"tests.py" = ["S"]
"*_test.py" = ["S"]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2
known-first-party=['ds_skeleteon_ga_1']
section-order= ['future', 'standard-library', 'third-party', 'django', 'first-party', 'local-folder']

[tool.ruff.lint.isort.sections]
"django" = ["django"]

[tool.coverage.run]
omit = [
    "*migrations*",
    "*tests*",
    "/usr/*",
    "*/env/*",
    "*/urls.py",
    "ds_skeleteon_ga_1/fixtures/*",
    "ds_skeleteon_ga_1/apps/accounts/api/authentication.py",
    "ds_skeleteon_ga_1/apps/common/management/commands/generate_secretkey.py",
    "ds_skeleteon_ga_1/apps/common/management/commands/startapp.py",
    "ds_skeleteon_ga_1/apps/common/utils/redis.py",
    "ds_skeleteon_ga_1/loggers.py",
    "ds_skeleteon_ga_1/wsgi.py",
    "*/admin.py",
]
[tool.coverage.report]
exclude_lines =[
    "noqa",
    "pragma: no cover",
    "def __unicode__",
    "def __repr__",
    "def __str__",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "assert",
]
show_missing = true

[tool.codespell]
skip = "*.lock"
ignore-words = "codespell-ignore-words.txt"
